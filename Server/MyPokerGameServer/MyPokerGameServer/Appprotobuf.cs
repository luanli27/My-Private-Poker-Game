// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appprotobuf.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from appprotobuf.proto</summary>
public static partial class AppprotobufReflection {

  #region Descriptor
  /// <summary>File descriptor for appprotobuf.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static AppprotobufReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFhcHBwcm90b2J1Zi5wcm90byIxCghSZXFMb2dpbhITCgtBY2NvdW50TmFt",
          "ZRgBIAEoCRIQCghQYXNzd29yZBgCIAEoCSJGChJBY2tFbnRlclJvb21SZXN1",
          "bHQSDgoGcmVzdWx0GAEgASgFEiAKC3BsYXllckluZm9zGAIgAygLMgsuUGxh",
          "eWVySW5mbyI4ChVBY2tOZXdQbGF5ZXJFbnRlclJvb20SHwoKcGxheWVySW5m",
          "bxgBIAEoCzILLlBsYXllckluZm8iQAoKUGxheWVySW5mbxIMCgRTZWF0GAEg",
          "ASgFEhMKC0FjY291bnROYW1lGAIgASgJEg8KB0NvaW5OdW0YAyABKAViBnBy",
          "b3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ReqLogin), global::ReqLogin.Parser, new[]{ "AccountName", "Password" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AckEnterRoomResult), global::AckEnterRoomResult.Parser, new[]{ "Result", "PlayerInfos" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AckNewPlayerEnterRoom), global::AckNewPlayerEnterRoom.Parser, new[]{ "PlayerInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerInfo), global::PlayerInfo.Parser, new[]{ "Seat", "AccountName", "CoinNum" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class ReqLogin : pb::IMessage<ReqLogin> {
  private static readonly pb::MessageParser<ReqLogin> _parser = new pb::MessageParser<ReqLogin>(() => new ReqLogin());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReqLogin> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppprotobufReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqLogin() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqLogin(ReqLogin other) : this() {
    accountName_ = other.accountName_;
    password_ = other.password_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqLogin Clone() {
    return new ReqLogin(this);
  }

  /// <summary>Field number for the "AccountName" field.</summary>
  public const int AccountNameFieldNumber = 1;
  private string accountName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccountName {
    get { return accountName_; }
    set {
      accountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReqLogin);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReqLogin other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountName != other.AccountName) return false;
    if (Password != other.Password) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccountName.Length != 0) hash ^= AccountName.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccountName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AccountName);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccountName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountName);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReqLogin other) {
    if (other == null) {
      return;
    }
    if (other.AccountName.Length != 0) {
      AccountName = other.AccountName;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          AccountName = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class AckEnterRoomResult : pb::IMessage<AckEnterRoomResult> {
  private static readonly pb::MessageParser<AckEnterRoomResult> _parser = new pb::MessageParser<AckEnterRoomResult>(() => new AckEnterRoomResult());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AckEnterRoomResult> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppprotobufReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AckEnterRoomResult() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AckEnterRoomResult(AckEnterRoomResult other) : this() {
    result_ = other.result_;
    playerInfos_ = other.playerInfos_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AckEnterRoomResult Clone() {
    return new AckEnterRoomResult(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private int result_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  /// <summary>Field number for the "playerInfos" field.</summary>
  public const int PlayerInfosFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PlayerInfo> _repeated_playerInfos_codec
      = pb::FieldCodec.ForMessage(18, global::PlayerInfo.Parser);
  private readonly pbc::RepeatedField<global::PlayerInfo> playerInfos_ = new pbc::RepeatedField<global::PlayerInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PlayerInfo> PlayerInfos {
    get { return playerInfos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AckEnterRoomResult);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AckEnterRoomResult other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    if(!playerInfos_.Equals(other.playerInfos_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != 0) hash ^= Result.GetHashCode();
    hash ^= playerInfos_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Result);
    }
    playerInfos_.WriteTo(output, _repeated_playerInfos_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
    }
    size += playerInfos_.CalculateSize(_repeated_playerInfos_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AckEnterRoomResult other) {
    if (other == null) {
      return;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    playerInfos_.Add(other.playerInfos_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Result = input.ReadInt32();
          break;
        }
        case 18: {
          playerInfos_.AddEntriesFrom(input, _repeated_playerInfos_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class AckNewPlayerEnterRoom : pb::IMessage<AckNewPlayerEnterRoom> {
  private static readonly pb::MessageParser<AckNewPlayerEnterRoom> _parser = new pb::MessageParser<AckNewPlayerEnterRoom>(() => new AckNewPlayerEnterRoom());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AckNewPlayerEnterRoom> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppprotobufReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AckNewPlayerEnterRoom() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AckNewPlayerEnterRoom(AckNewPlayerEnterRoom other) : this() {
    PlayerInfo = other.playerInfo_ != null ? other.PlayerInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AckNewPlayerEnterRoom Clone() {
    return new AckNewPlayerEnterRoom(this);
  }

  /// <summary>Field number for the "playerInfo" field.</summary>
  public const int PlayerInfoFieldNumber = 1;
  private global::PlayerInfo playerInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PlayerInfo PlayerInfo {
    get { return playerInfo_; }
    set {
      playerInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AckNewPlayerEnterRoom);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AckNewPlayerEnterRoom other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (playerInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(PlayerInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (playerInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AckNewPlayerEnterRoom other) {
    if (other == null) {
      return;
    }
    if (other.playerInfo_ != null) {
      if (playerInfo_ == null) {
        playerInfo_ = new global::PlayerInfo();
      }
      PlayerInfo.MergeFrom(other.PlayerInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (playerInfo_ == null) {
            playerInfo_ = new global::PlayerInfo();
          }
          input.ReadMessage(playerInfo_);
          break;
        }
      }
    }
  }

}

public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo> {
  private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AppprotobufReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerInfo(PlayerInfo other) : this() {
    seat_ = other.seat_;
    accountName_ = other.accountName_;
    coinNum_ = other.coinNum_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerInfo Clone() {
    return new PlayerInfo(this);
  }

  /// <summary>Field number for the "Seat" field.</summary>
  public const int SeatFieldNumber = 1;
  private int seat_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Seat {
    get { return seat_; }
    set {
      seat_ = value;
    }
  }

  /// <summary>Field number for the "AccountName" field.</summary>
  public const int AccountNameFieldNumber = 2;
  private string accountName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccountName {
    get { return accountName_; }
    set {
      accountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "CoinNum" field.</summary>
  public const int CoinNumFieldNumber = 3;
  private int coinNum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CoinNum {
    get { return coinNum_; }
    set {
      coinNum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Seat != other.Seat) return false;
    if (AccountName != other.AccountName) return false;
    if (CoinNum != other.CoinNum) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Seat != 0) hash ^= Seat.GetHashCode();
    if (AccountName.Length != 0) hash ^= AccountName.GetHashCode();
    if (CoinNum != 0) hash ^= CoinNum.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Seat != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Seat);
    }
    if (AccountName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(AccountName);
    }
    if (CoinNum != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(CoinNum);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Seat != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seat);
    }
    if (AccountName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountName);
    }
    if (CoinNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CoinNum);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerInfo other) {
    if (other == null) {
      return;
    }
    if (other.Seat != 0) {
      Seat = other.Seat;
    }
    if (other.AccountName.Length != 0) {
      AccountName = other.AccountName;
    }
    if (other.CoinNum != 0) {
      CoinNum = other.CoinNum;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Seat = input.ReadInt32();
          break;
        }
        case 18: {
          AccountName = input.ReadString();
          break;
        }
        case 24: {
          CoinNum = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
